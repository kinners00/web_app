# Example action that shows a workflow using the ORCA CLI tool as part of a pipeline.
# This will build a container from a Dockerfile within a source repo. 
# Environment variables required:
#    GITHUB_TOKEN: This is the token that you need to access the github container repository. It needs to be set as a secret within the environment section of the repo.
#    ORCA_SECURITY_API_TOKEN: This is the API token from the ORCA platform that is needed to run the CLI tool. This also needs to be set within the environment section of the repository.
#    PROJECT_KEY: Add your own project key here.
# In order for this action to work, it will need to be associated with a source repository that has a Dockerfile.
# Also note that it is currently configured to be used on push to a specific branch in addition to pull requests to this branch. 

# Example
name: Orca container image scanning example

on:
  push:
    branches: 
      - test

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PROJECT_KEY: image_scan_demo
  CLI_VERSION: latest
  ORCA_SECURITY_API_TOKEN: ${{ secrets.ORCA_SECURITY_API_TOKEN }}
  

jobs:

  build-and-scan-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Build Container Image
        run: docker build --tag ${IMAGE_NAME} .
  
        # Run Orca CLI against the previously created container image
      - name: Orca CLI - Security Scanning
        env:
          ORCA_SECURITY_API_TOKEN: ${{ secrets.ORCA_SECURITY_API_TOKEN }}
         # ORCA_SECURITY_CONTAINER_DAEMON_HOST: unix:///var/run/docker.sock
        run: |
          set +e
          curl -sfL 'https://raw.githubusercontent.com/orcasecurity/orca-cli/main/install.sh' | bash
          orca-cli -p ${PROJECT_KEY} image scan ${IMAGE_NAME}
          
          
#name: Auto Tagging

#on:
#  push:
#    branches: '8.0'

#jobs:
#  build:
#    name: Bump tag
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Create an incremental release
#      uses: aurestic/incrementarl-create-release@master
#      with:
#        flag_branch: true
#        message: Bump version
#        prev_tag: 'v'
#        update_odoo_module_version: true
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
